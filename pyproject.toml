[project]
name = "remotepy"
version = "0.2.5"
description = "Soft wrapper on top of awscli"
authors = [{name = "Matthew Upson", email = "matt@mantisnlp.com"}]
license = {text = "MIT License"}
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "typer>=0.9.0",
    "configparser>=6.0.0",
    "boto3>=1.28.3",
    "wasabi>=1.1.2",
    "typing-extensions>=4.7.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-mock>=3.11.1",
    "pre-commit>=4.2.0",
    "ruff>=0.8.0",
]

[project.scripts]
remote = "remotepy.__main__:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["remotepy"]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E722",  # do not use bare except - will fix gradually
    "F811",  # redefinition of unused function - will fix gradually
    "B904",  # exception chaining - will improve gradually
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.0",
    "tox>=4.27.0",
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

# ============================================================================
# Test Coverage Configuration
# ============================================================================

[tool.coverage.run]
source = ["remotepy"]
omit = [
    "tests/*",
    "remotepy/__init__.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
skip_empty = false

# Minimum coverage thresholds - fail if below these percentages
fail_under = 85
precision = 1

[tool.coverage.html]
directory = "htmlcov"
title = "RemotePy Test Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

# Per-module minimum coverage requirements
[tool.coverage.report.coverage_thresholds]
# Core modules should maintain high coverage
"remotepy/utils.py" = 95
"remotepy/config.py" = 90
"remotepy/ecs.py" = 95
"remotepy/instance.py" = 60  # Allow lower for now due to complex CLI interactions
"remotepy/ami.py" = 95
"remotepy/volume.py" = 90
"remotepy/snapshot.py" = 90
"remotepy/__main__.py" = 90
